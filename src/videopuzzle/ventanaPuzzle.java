/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package videopuzzle;

import java.awt.event.ActionEvent;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;

import javax.swing.Timer;

/**
 *
 * @author homor
 */
public class ventanaPuzzle extends javax.swing.JFrame {

    /**
     * Creates new form ventanaPuzzle
     */
    public Timer tiempo, tiempoRevolver;
    int minutos = 5, segundos = 0;

    public ventanaPuzzle() {
        initComponents();
        setSize(1200, 1000);
        this.setLocationRelativeTo(null);
        juego.setVisible(false); //JPanel donde está la imagen
        pausar.setVisible(false); //Ocultar el botón de pausar juego
        rendirse.setVisible(false); //Ocultar el botón de rendirse
        revolverPiezas();
        tiempo = new Timer(1000, null);
        tiempoRevolver = new Timer(10, null);

        tiempo.addActionListener((ActionEvent ae) -> {
            ejecutarCronometro();
        });
        tiempoRevolver.addActionListener((ActionEvent ae) -> {
            revolverPiezas();
        });
    }
    pausa pau = new pausa(); //
    boolean activo = true; //Activar o desactivar las imagenes

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rendirse = new javax.swing.JButton();
        pausar = new javax.swing.JButton();
        iniciar = new javax.swing.JButton();
        tiempoRestante = new javax.swing.JLabel();
        juego = new javax.swing.JPanel();
        uno = new javax.swing.JButton();
        dos = new javax.swing.JButton();
        tres = new javax.swing.JButton();
        cuatro = new javax.swing.JButton();
        cinco = new javax.swing.JButton();
        seis = new javax.swing.JButton();
        siete = new javax.swing.JButton();
        ocho = new javax.swing.JButton();
        nueve = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 255, 51));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        getContentPane().setLayout(null);

        rendirse.setBackground(new java.awt.Color(255, 0, 0));
        rendirse.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        rendirse.setForeground(new java.awt.Color(70, 0, 0));
        rendirse.setText("RENDIRSE");
        rendirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rendirseActionPerformed(evt);
            }
        });
        getContentPane().add(rendirse);
        rendirse.setBounds(760, 330, 200, 60);

        pausar.setBackground(new java.awt.Color(255, 204, 51));
        pausar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        pausar.setText("PAUSAR");
        pausar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(83, 80, 0)));
        pausar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pausarActionPerformed(evt);
            }
        });
        getContentPane().add(pausar);
        pausar.setBounds(760, 260, 200, 60);

        iniciar.setBackground(new java.awt.Color(51, 255, 0));
        iniciar.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        iniciar.setText("INICIAR");
        iniciar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });
        getContentPane().add(iniciar);
        iniciar.setBounds(760, 190, 200, 60);

        tiempoRestante.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        tiempoRestante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tiempoRestante.setText("5:00");
        getContentPane().add(tiempoRestante);
        tiempoRestante.setBounds(800, 60, 130, 80);

        juego.setLayout(new java.awt.GridLayout(3, 3));

        uno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/9.jpg"))); // NOI18N
        uno.setToolTipText("");
        uno.setName("boton1"); // NOI18N
        uno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                unoMouseEntered(evt);
            }
        });
        uno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unoActionPerformed(evt);
            }
        });
        juego.add(uno);

        dos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/8.jpg"))); // NOI18N
        dos.setToolTipText("2");
        dos.setName("boton2"); // NOI18N
        dos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dosActionPerformed(evt);
            }
        });
        juego.add(dos);

        tres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/7.jpg"))); // NOI18N
        tres.setName("boton3"); // NOI18N
        tres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tresActionPerformed(evt);
            }
        });
        juego.add(tres);

        cuatro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/6.jpg"))); // NOI18N
        cuatro.setName("boton4"); // NOI18N
        cuatro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuatroActionPerformed(evt);
            }
        });
        juego.add(cuatro);

        cinco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/5.jpg"))); // NOI18N
        cinco.setName("boton5"); // NOI18N
        cinco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cincoActionPerformed(evt);
            }
        });
        juego.add(cinco);

        seis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/4.jpg"))); // NOI18N
        seis.setName("boton6"); // NOI18N
        seis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seisActionPerformed(evt);
            }
        });
        juego.add(seis);

        siete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/3.jpg"))); // NOI18N
        siete.setName("boton7"); // NOI18N
        siete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sieteActionPerformed(evt);
            }
        });
        juego.add(siete);

        ocho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/2.jpg"))); // NOI18N
        ocho.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ocho.setName("boton8"); // NOI18N
        ocho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ochoActionPerformed(evt);
            }
        });
        juego.add(ocho);

        nueve.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen1/1.jpg"))); // NOI18N
        nueve.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nueve.setName("boton9"); // NOI18N
        nueve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nueveActionPerformed(evt);
            }
        });
        juego.add(nueve);

        getContentPane().add(juego);
        juego.setBounds(130, 60, 530, 550);

        salir.setBackground(new java.awt.Color(255, 255, 255));
        salir.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        getContentPane().add(salir);
        salir.setBounds(760, 400, 200, 60);

        jLabel1.setBackground(new java.awt.Color(255, 102, 102));
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(-130, -20, 1670, 1150);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nueveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nueveActionPerformed
        // TODO add your handling code here:
        if (ocho.isVisible() == false) {
            moverPiezas(ocho, nueve);
            cambiarNombre(ocho, nueve);
        }
        if (seis.isVisible() == false) {
            moverPiezas(seis, nueve);
            cambiarNombre(seis, nueve);
        }
        ganar();
    }//GEN-LAST:event_nueveActionPerformed

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        // TODO add your handling code here:
        tipoMouse(); //Cambia el diseño del mouse cuando lo pasas encima de una pieza
        tiempo.start(); //Iniciar el cronómetro
        this.iniciar.setVisible(false); //Oculta el botón
        this.iniciar.setText("CONTINUAR"); //Cambia el nombre del botón para la proxima vez que aparezca
        pausar.setVisible(true); //Aparece el botón que permite poner pausa
        rendirse.setVisible(true); //Aparecer el botón que permite rendirse (de preferencia no utilizar)
        juego.setVisible(true); //Aparecer la imagen para jugar
        pau.setVisible(false); //Ventana emergente que tapa el puzzle
        activarBotones(true); //Activa las piezas
    }//GEN-LAST:event_iniciarActionPerformed

    private void pausarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pausarActionPerformed
        // TODO add your handling code here:
        tiempo.stop();
        iniciar.setVisible(true);
        this.pausar.setVisible(false);
        pau.setVisible(true);
        activarBotones(false);
    }//GEN-LAST:event_pausarActionPerformed

    private void rendirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rendirseActionPerformed
    // TODO add your handling code here:
        new rendirse().setVisible(true);      
    }//GEN-LAST:event_rendirseActionPerformed

    private void ochoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ochoActionPerformed
        // TODO add your handling code here:
        if (nueve.isVisible() == false) {
            moverPiezas(nueve, ocho);
            cambiarNombre(nueve, ocho);
        } else if (cinco.isVisible() == false) {
            moverPiezas(cinco, ocho);
            cambiarNombre(cinco, ocho);
        } else if (siete.isVisible() == false) {
            moverPiezas(siete, ocho);
            cambiarNombre(siete, ocho);
        }
        ganar();
    }//GEN-LAST:event_ochoActionPerformed

    private void sieteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sieteActionPerformed
        // TODO add your handling code here:
        if (ocho.isVisible() == false) {
            moverPiezas(ocho, siete);
            cambiarNombre(ocho, siete);
        }
        if (cuatro.isVisible() == false) {
            moverPiezas(cuatro, siete);
            cambiarNombre(cuatro, siete);
        }
        ganar();
    }//GEN-LAST:event_sieteActionPerformed

    private void seisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seisActionPerformed
        // TODO add your handling code here:
        if (nueve.isVisible() == false) {
            moverPiezas(nueve, seis);
            cambiarNombre(nueve, seis);
        }
        if (cinco.isVisible() == false) {
            moverPiezas(cinco, seis);
            cambiarNombre(cinco, seis);
        }
        if (tres.isVisible() == false) {
            moverPiezas(tres, seis);
            cambiarNombre(tres, seis);
        }
        ganar();
    }//GEN-LAST:event_seisActionPerformed

    private void cincoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cincoActionPerformed
        // TODO add your handling code here:
        if (ocho.isVisible() == false) {
            moverPiezas(ocho, cinco);
            cambiarNombre(ocho, cinco);
        }
        if (dos.isVisible() == false) {
            moverPiezas(dos, cinco);
            cambiarNombre(dos, cinco);
        }
        if (cuatro.isVisible() == false) {
            moverPiezas(cuatro, cinco);
            cambiarNombre(cuatro, cinco);
        }
        if (seis.isVisible() == false) {
            moverPiezas(seis, cinco);
            cambiarNombre(seis, cinco);
        }
        ganar();
    }//GEN-LAST:event_cincoActionPerformed

    private void cuatroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuatroActionPerformed
        // TODO add your handling code here:
        if (uno.isVisible() == false) {
            moverPiezas(uno, cuatro);
            cambiarNombre(uno, cuatro);
        }
        if (cinco.isVisible() == false) {
            moverPiezas(cinco, cuatro);
            cambiarNombre(cinco, cuatro);
        }
        if (siete.isVisible() == false) {
            moverPiezas(siete, cuatro);
            cambiarNombre(siete, cuatro);
        }
        ganar();
    }//GEN-LAST:event_cuatroActionPerformed

    private void tresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tresActionPerformed
        // TODO add your handling code here:
        if (seis.isVisible() == false) {
            moverPiezas(seis, tres);
            cambiarNombre(seis, tres);
        }
        if (dos.isVisible() == false) {
            moverPiezas(dos, tres);
            cambiarNombre(dos, tres);
        }
        ganar();
    }//GEN-LAST:event_tresActionPerformed

    private void dosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dosActionPerformed
        // TODO add your handling code here:
        if (uno.isVisible() == false) {
            moverPiezas(uno, dos);
            cambiarNombre(uno, dos);
        }
        if (tres.isVisible() == false) {
            moverPiezas(tres, dos);
            cambiarNombre(tres, dos);
        }
        if (cinco.isVisible() == false) {
            moverPiezas(cinco, dos);
            cambiarNombre(cinco, dos);
        }
        ganar();
    }//GEN-LAST:event_dosActionPerformed

    private void unoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unoActionPerformed
        // TODO add your handling code here:
        if (dos.isVisible() == false) {
            moverPiezas(dos, uno);
            cambiarNombre(dos, uno);
        }
        if (cuatro.isVisible() == false) {
            moverPiezas(cuatro, uno);
            cambiarNombre(cuatro, uno);
        }
        ganar();
    }//GEN-LAST:event_unoActionPerformed

    private void unoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_unoMouseEntered

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
       System.exit(0);
    }//GEN-LAST:event_salirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton cinco;
    public javax.swing.JButton cuatro;
    public javax.swing.JButton dos;
    private javax.swing.JButton iniciar;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JPanel juego;
    public javax.swing.JButton nueve;
    public javax.swing.JButton ocho;
    private javax.swing.JButton pausar;
    private javax.swing.JButton rendirse;
    private javax.swing.JButton salir;
    public javax.swing.JButton seis;
    public javax.swing.JButton siete;
    public javax.swing.JLabel tiempoRestante;
    public javax.swing.JButton tres;
    public javax.swing.JButton uno;
    // End of variables declaration//GEN-END:variables
    private void ejecutarCronometro() {
       if (segundos == 0) {
        if (minutos == 0) {
            // El tiempo ha llegado a cero
            tiempo.stop(); // Detenemos el cronómetro

            // Mostramos un mensaje con JOptionPane
            Perdiste ventana = new Perdiste();
        ventana.setVisible(true);

            // Puedes agregar acciones adicionales aquí, como reiniciar el juego o cerrar la ventana.
        } else {
            segundos = 60;
            minutos--;
        }
    }
    segundos--;

    if (segundos < 10) {
        tiempoRestante.setText(minutos + ":0" + segundos);
    } else {
        tiempoRestante.setText(minutos + ":" + segundos);
    }
}
    public void tipoMouse() {
        JButton[] botones = {uno, dos, tres, cuatro, cinco, seis, siete, ocho, nueve};
        for (JButton boton : botones) {
            if (boton.isVisible() || boton.isEnabled()) {
                boton.setCursor(java.awt.Cursor.getPredefinedCursor(12));
            }
        }
    }

    public void activarBotones(boolean activar) {
        JButton[] botones = {uno, dos, tres, cuatro, cinco, seis, siete, ocho, nueve};
        for (JButton boton : botones) {
            boton.setEnabled(activar);
        }
    }

    private void revolverPiezas() {

        Random rnd = new Random();
        JButton[] boton = {uno, dos, tres, cuatro, cinco, seis, siete, ocho, nueve};

        int posicionBotonVacio = 8;

        Icon imagen9 = boton[8].getIcon();

        for (int i = 0; i < 100; i++) {
            int mover = rnd.nextInt(4) + 1;
            switch (mover) {
                case 1:
                    if (posicionBotonVacio < 8 && posicionBotonVacio != 2 && posicionBotonVacio != 5) {
                        Icon iconoVacio = boton[posicionBotonVacio].getIcon();

                        boton[posicionBotonVacio].setIcon(boton[posicionBotonVacio + 1].getIcon());
                        boton[posicionBotonVacio + 1].setIcon(iconoVacio);

                        cambiarNombre(boton[posicionBotonVacio], boton[posicionBotonVacio + 1]);
                        posicionBotonVacio += 1;

                    }
                    break;
                case 2:
                    if (posicionBotonVacio > 0 && posicionBotonVacio != 3 && posicionBotonVacio != 6) {
                        Icon iconoVacio = boton[posicionBotonVacio].getIcon();

                        boton[posicionBotonVacio].setIcon(boton[posicionBotonVacio - 1].getIcon());
                        boton[posicionBotonVacio - 1].setIcon(iconoVacio);

                        cambiarNombre(boton[posicionBotonVacio], boton[posicionBotonVacio - 1]);
                        posicionBotonVacio -= 1;

                    }
                    break;
                case 3:
                    if (posicionBotonVacio <= 5) {
                        Icon iconAnterior = boton[posicionBotonVacio].getIcon();

                        boton[posicionBotonVacio].setIcon(boton[posicionBotonVacio + 3].getIcon());
                        boton[posicionBotonVacio + 3].setIcon(iconAnterior);

                        cambiarNombre(boton[posicionBotonVacio], boton[posicionBotonVacio + 3]);
                        posicionBotonVacio += 3;

                    }
                    break;
                case 4:
                    if (posicionBotonVacio >= 4) {
                        Icon iconAnterior = boton[posicionBotonVacio].getIcon();

                        boton[posicionBotonVacio].setIcon(boton[posicionBotonVacio - 3].getIcon());
                        boton[posicionBotonVacio - 3].setIcon(iconAnterior);

                        cambiarNombre(boton[posicionBotonVacio], boton[posicionBotonVacio - 3]);
                        posicionBotonVacio -= 3;

                    }
                    break;
            }

        }

        //Buscar la imagen 1 y así ocultar el botón donde se encuentra
        for (int i = 0; i < 9; i++) {
            Icon imagenComparada = boton[i].getIcon();

            ImageIcon imageIcon1 = (imagen9 instanceof ImageIcon) ? (ImageIcon) imagen9 : null;
            ImageIcon imageIcon2 = (imagenComparada instanceof ImageIcon) ? (ImageIcon) imagenComparada : null;

            if (imageIcon1.getImage().equals(imageIcon2.getImage())) {
                boton[i].setVisible(false);
            }
        }
    }

    private void cambiarNombre(JButton boton1, JButton boton2) {
        String temp = boton1.getName();
        boton1.setName(boton2.getName());
        boton2.setName(temp);
    }

    private void moverPiezas(JButton botonNoVisible, JButton botonVisible) {

        botonNoVisible.setIcon(botonVisible.getIcon());
        botonVisible.setVisible(false);
        botonNoVisible.setVisible(true);

    }

    private void ganar() {
        if (uno.getName().equals("boton1")) {
            if (dos.getName().equals("boton2")) {
                if (tres.getName().equals("boton3")) {
                    if (cuatro.getName().equals("boton4")) {
                        if (cinco.getName().equals("boton5")) {
                            if (seis.getName().equals("boton6")) {
                                if (siete.getName().equals("boton7")) {
                                    if (ocho.getName().equals("boton8")) {
                                        if (nueve.getName().equals("boton9")) {
                                            new ganaste().setVisible(true);
                                            tiempo.stop();
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
